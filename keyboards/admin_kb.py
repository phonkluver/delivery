"""
Keyboard layouts for admin users.
This module contains functions to create admin keyboard layouts.
"""
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton


async def get_admin_main_keyboard():
    """Create main keyboard for administrators"""
    keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤"), KeyboardButton(text="üìÆ –ù–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–∫–∞–∑")],
        [KeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞–º–∏"), KeyboardButton(text="üè™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏")],
        [KeyboardButton(text="üìä –û—Ç—á–µ—Ç"), KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")]
    ], resize_keyboard=True)
    return keyboard


async def get_couriers_keyboard(couriers):
    """Create keyboard with courier selection options"""
    buttons = []
    
    # Add buttons for each courier
    for courier in couriers:
        courier_id = courier['id']
        courier_full_info = courier['username']
        
        # –†–∞–∑–¥–µ–ª—è–µ–º –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –∫—É—Ä—å–µ—Ä–∞ (—Ñ–æ—Ä–º–∞—Ç: "–ò–º—è | –¢–µ–ª–µ—Ñ–æ–Ω")
        courier_info = courier_full_info.split(" | ")
        courier_name = courier_info[0] if len(courier_info) > 0 else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        courier_phone = courier_info[1] if len(courier_info) > 1 else ""
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        button_text = f"{courier_name}"
        if courier_phone:
            button_text += f" ({courier_phone})"
        button_text += f": {courier_id}"
        
        buttons.append([KeyboardButton(text=button_text)])
    
    # Add cancel button
    buttons.append([KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")])
    
    keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    return keyboard


async def get_courier_management_keyboard():
    """Create keyboard for courier management"""
    keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∫—É—Ä—å–µ—Ä–æ–≤"), KeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫—É—Ä—å–µ—Ä–∞")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ], resize_keyboard=True)
    return keyboard


async def get_shop_management_keyboard():
    """Create keyboard for shop management"""
    keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤"), KeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ], resize_keyboard=True)
    return keyboard


async def get_couriers_list_keyboard(couriers):
    """Create keyboard with courier list for deletion"""
    buttons = []
    
    # Add buttons for each courier
    for courier in couriers:
        courier_id = courier['id']
        courier_full_info = courier['username']
        
        # –†–∞–∑–¥–µ–ª—è–µ–º –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –∫—É—Ä—å–µ—Ä–∞ (—Ñ–æ—Ä–º–∞—Ç: "–ò–º—è | –¢–µ–ª–µ—Ñ–æ–Ω")
        courier_info = courier_full_info.split(" | ")
        courier_name = courier_info[0] if len(courier_info) > 0 else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        courier_phone = courier_info[1] if len(courier_info) > 1 else ""
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        button_text = f"‚ùå {courier_name}"
        if courier_phone:
            button_text += f" ({courier_phone})"
        button_text += f" (ID: {courier_id})"
        
        buttons.append([KeyboardButton(text=button_text)])
    
    # Add back button
    buttons.append([KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")])
    
    keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    return keyboard


async def get_shops_list_keyboard(shops):
    """Create keyboard with shop list for deletion"""
    buttons = []
    
    # Add buttons for each shop
    for shop in shops:
        shop_id = shop['id']
        shop_full_info = shop['username']
        
        # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –º–∞–≥–∞–∑–∏–Ω–∞ (—Ñ–æ—Ä–º–∞—Ç: "–ù–∞–∑–≤–∞–Ω–∏–µ | –¢–µ–ª–µ—Ñ–æ–Ω")
        shop_info = shop_full_info.split(" | ")
        shop_name = shop_info[0] if len(shop_info) > 0 else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        shop_phone = shop_info[1] if len(shop_info) > 1 else ""
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        button_text = f"‚ùå {shop_name}"
        if shop_phone:
            button_text += f" ({shop_phone})"
        button_text += f" (ID: {shop_id})"
        
        buttons.append([KeyboardButton(text=button_text)])
    
    # Add back button
    buttons.append([KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")])
    
    keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    return keyboard
